<!-- LML has a pretty powerful equation parser that handles
    int, float, boolean and String types (determined at
    runtime) and a number of operators. Calculation macro
    is used to evaluate an equation and assign its result to
    an argument. First macro attribute is the name of result
    argument - the rest is merged into an equation. '>' sign
    has to be escaped with '&gt' in tags, so if you prefer,
    you can pass the equation as data between macro tags
    rather than macro attributes. -->
<:calculate maths (2.5*2)^2-17.5/>
<label>{maths}</label>

<!-- Attributes can be optionally named with "key" (name of
    argument to assign) and "value" (equation). In this example,
    OUT will be removed from the joined strings: -->
<:calculate key="myLabelContent" value="(LabOUTe + lOUT.) - OUT"/>
<label>{myLabelContent}</label>

<:calculate shouldIMakeRow>12 > (4%3) * 5</:calculate>
<table>
    <label color=green row={shouldIMakeRow}>Well...</label>
    <label>should I?</label>
</table>

<table defaultPad=4>
    <:loop 9> <!-- row=true attribute appends row after widget. -->
        <:calculate key="row" value="{loop:index}%3=2" />
        <button row={row}/>
    </:loop>
</table>